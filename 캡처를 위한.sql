

CREATE TABLE PASSENGER_ID
(
USER_NUM INT NOT NULL,
USER_ID VARCHAR(20) NOT NULL,
PRIMARY KEY(USER_NUM),
FOREIGN KEY(USER_NUM) REFERENCES PASSENGER(USER_NUM)
ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE PASSENGER(
USER_NUM INT NOT NULL,
USER_PW VARCHAR(20) NOT NULL,
USER_NAME VARCHAR(5) NOT NULL,
USER_PHONE_NUM VARCHAR(15) NOT NULL,
USER_BIRTHDAY DATE NOT NULL,
USER_ACCUMM INT NULL DEFAULT 0,
PRIMARY KEY(USER_NUM)
);

CREATE TABLE BOARD(
POST_NUM INT NOT NULL,
USER_NUM INT NOT NULL,
POST_DATE DATE NOT NULL,
POST_PW VARCHAR(20) NULL,
POST_CONTENTS VARCHAR(100) NOT NULL,
PRIMARY KEY(POST_NUM),
FOREIGN KEY(USER_NUM) REFERENCES PASSENGER(USER_NUM)
ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE COUPON(
COUPON_CODE VARCHAR(10) NOT NULL,
COUPON_VALIDITY DATE NULL DEFAULT '9999-12-31',
COUPON_CONTENTS VARCHAR(100) NOT NULL,
PRIMARY KEY(COUPON_CODE)
);

CREATE TABLE PASSENGER_COUPON(
USER_NUM INT NOT NULL,
COUPON_CODE VARCHAR(10) NOT NULL,
PRIMARY KEY(USER_NUM, COUPON_CODE),
FOREIGN KEY(USER_NUM) REFERENCES PASSENGER(USER_NUM)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(COUPON_CODE) REFERENCES COUPON(COUPON_CODE)
ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE DRIVER (
   DRIVER_NUM INT NOT NULL,
   DRIVER_BRITHDAY DATE NOT NULL,
   DRIVER_PHONE_NUM INT NOT NULL,
   BUSINESS_AREA VARCHAR(20) NOT NULL,
   DRIVER_SCORE FLOAT DEFAULT NULL,
   DRIVER_NAME VARCHAR(5) NOT NULL,
   PRIMARY KEY(DRIVER_NUM),
   CHECK(DRIVER_SCORE >= 0 and DRIVER_SCORE <= 5.0)
);

CREATE TABLE DRIVE (
   DRIVER_NUM INT NOT NULL,
   CAR_NUM VARCHAR(20) NOT NULL,
   PRIMARY KEY(DRIVER_NUM),
   FOREIGN KEY(DRIVER_NUM) REFERENCES DRIVER(DRIVER_NUM) 
   ON DELETE CASCADE ON UPDATE CASCADE,
   FOREIGN KEY(CAR_NUM) REFERENCES CAR(CAR_NUM) 
   ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE HISTORY (
   CALL_NUM INT NOT NULL,
   USER_NUM INTEGER(9) NOT NULL,
   DRIVER_NUM INTEGER(9) NOT NULL,
   STARTPOINT VARCHAR(20) NOT NULL,
   ENDPOINT VARCHAR(20) NOT NULL,
   PAYMENT VARCHAR(10) NOT NULL,
   CAR_NUM VARCHAR(10) NOT NULL,
   DRIVE_DATE DATE NOT NULL,
   PRIMARY KEY(CALL_NUM),
   FOREIGN KEY(USER_NUM) REFERENCES PASSENGER(USER_NUM)
   ON UPDATE CASCADE,
   FOREIGN KEY(DRIVER_NUM) REFERENCES DRIVER(DRIVER_NUM)
   ON UPDATE CASCADE,
   FOREIGN KEY(CAR_NUM) REFERENCES CAR(CAR_NUM)
   ON UPDATE CASCADE
);


CREATE TABLE CAR(
CAR_NUM VARCHAR(20) NOT NULL,
CAR_TYPE VARCHAR(10) NOT NULL,
CAR_GRADE char(3) NOT NULL,
REGIST_DATE DATE NOT NULL,
PRIMARY KEY (CAR_NUM)
);


CREATE TABLE SUPPLY(
BUSINESS_NUM INT NOT NULL,
SUPPLY_DATE DATE NOT NULL,
CAR_NUM VARCHAR(10) NOT NULL,
PRIMARY KEY(BUSINESS_NUM, CAR_NUM),
FOREIGN KEY(BUSINESS_NUM) REFERENCES COMPANY(BUSINESS_NUM) 
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(CAR_NUM) REFERENCES CAR(CAR_NUM)
ON DELETE CASCADE ON UPDATE CASCADE
);
 

CREATE TABLE COMPANY(
BUSINESS_NUM INTEGER(20) NOT NULL,
COMPANY_NAME VARCHAR(20) NOT NULL,
COMPANY_PHONE_NUM INTEGER(11) NOT NULL,
COMPANY_ADDRESS VARCHAR(20) NOT NULL,
BUSINESS_MANAGER VARCHAR(5) NOT NULL,
PRIMARY KEY(BUSINESS_NUM),
CHECK(BUSINESS_NUM > 0)
);

-- 사업자번호는 음수 불가
ALTER TABLE COMPANY ADD CONSTRAINT chk_business_num CHECK(BUSINESS_NUM > 0);